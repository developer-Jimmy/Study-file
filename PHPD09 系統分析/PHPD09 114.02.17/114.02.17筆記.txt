master分支:開發者不會直接commit到這個分支，
只能從其他分支合併過來，因為這是穩定版本

develop分支:這是所有開發功能的基礎分支，需要新增功能時，
都是從這個分支切出去，當feature分支功能完成後，在合併回來

hotfix分支:當線上產品發生緊急問題，會從master分支開一個hotfix分支
出來進行修復，當hotfix分支修復完成，在合併回master分支，同時
也會合併一分到develop分支(如果不這麼做，develop分支完成並
合併回master，問題會再次出現)

release分支:當認為develop分支成熟，就可以把develop分支合併到
release分支，在這邊進行上線前的最後測試，測試完成，release分支
將會同時合併master以及develop這兩個分支上(release分支還會測到
並修正一些問題，需要跟develop分支同步，免得之後版本出現同樣問題)

feature分支:當要開始新增功能，就是使用feature分支的時候，feature
分支都是從develop分支來的，完成後再並回develop分支
-----------------------------------------
測試標的
建立標準
角色與權責
採用的測試方式及其時機
錯誤通報/解決的標準流程
測試環境
-----------------------------------------
語法錯誤
執行時期錯誤
邏輯錯誤
-----------------------------------------
依照策略:黑箱測試、白箱測試
依照時程:Alpha、Beta、封測、公測
依照作法:單元測試、整合測試、系統測試、迴歸測試、效能測試、壓力測試
安全測試、穩定測試、A/B測試
-----------------------------------------
受測函數 > 測試程式 > 斷言庫 > 測試報告
-----------------------------------------
撰寫測試程式
由單元測試框架執行測試程式
以斷言庫確認是否符合預期
產生測試結果與涵蓋報告
-----------------------------------------
下載puppeteer
用程式模擬人類操作瀏覽器
autohotkey(模擬使用者操作的網站)
-----------------------------------------
UML圖
麥當勞點餐活動圖:第?人稱觀點、詳細程度、符號正確性
A先在B or B先在A? 都可以?
錯誤流程?
A --> B A換成B的時機
A經過一段時間 --> B 
強調時間用沙漏圖或旗子圖
點餐 > 製作or付款 > 打包
-----------------------------------------
屬性與屬性值的變化(例如品項檢查)
